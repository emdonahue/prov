#!/bin/zsh

source $(dirname "$0")/prov >/dev/null

function assert() {
       if [[ "$2" != "$3" ]]; then
       	   echo -n "Failure: $1\n\tReceived: "
	   echo -E "$2"
	   echo -n '\tExpected: '
	   echo -E "$3"
	   ERR=1
       fi
}

function teardown() {
    cd "$DIR"
    rm -rf Makefile a b subdir subdir2 subdir3
    mkdir -p subdir
}

DIR=$(mktemp -d)
trap "rm -rf $DIR" EXIT
mkdir "$DIR/subdir"
cd "$DIR"

#init
prov init
[[ -f Makefile ]] || assert 'init creation' 1
prov init 2>/dev/null
assert 'init already exists' $? 1
teardown

#set
prov init
prov set a <<< 'touch a'
assert 'set initial' "$(prov echo a)" "$(echo 'a: \n\ttouch a')"
prov set a b <<< 'touch b'
assert 'set reset' "$(prov echo a)" "$(echo 'a: b\n\ttouch b')"
prov unset a
assert 'unset' "$(prov echo a 2>&1)" "No recipe for a found in $DIR/Makefile"
teardown
prov init
prov set subdir/a subdir/b <<< 'cat subdir/b > subdir/a'
assert 'echo' "$(prov echo subdir/a)" "$(echo 'subdir/a: subdir/b\n\tcat subdir/b > subdir/a')"
teardown

#rm
prov init
prov set a <<< 'touch a'
touch a
prov rm a
assert 'rm recipe removed' "$(prov echo a 2>&1)" "No recipe for a found in $DIR/Makefile"
[[ ! -f a ]] || assert 'rm file removed' 1
touch a
cd subdir
prov set a <<< 'touch a'
prov rm ../a
assert 'rm relpath' "$(prov echo a 2>&1)" "No recipe for a found in $DIR/Makefile"
cd "$DIR"
prov set a <<< 'touch a'
prov set b <<< 'touch b'
touch a b
prov rm a b
[[ ! -f a ]] || assert 'rm multi a' 1
[[ ! -f b ]] || assert 'rm multi b' 1
assert 'rm multi a recipe' "$(prov echo a 2>&1)" "No recipe for a found in $DIR/Makefile"
assert 'rm multi b recipe' "$(prov echo b 2>&1)" "No recipe for b found in $DIR/Makefile"
touch subdir/a subdir/b
prov set subdir/a <<< 'touch subdir/a'
prov set subdir/b <<< 'touch subdir/b'
prov rm subdir
[[ ! -d subdir ]] || assert 'rm dir' 1
assert 'rm dir a' "$(prov echo subdir/a 2>&1)" "No recipe for subdir/a found in $DIR/Makefile"
assert 'rm dir b' "$(prov echo subdir/b 2>&1)" "No recipe for subdir/b found in $DIR/Makefile"
teardown

#mv
prov init
touch a
prov set a <<< 'touch a'
prov mv a b
[[ -f b ]] || assert 'mv file' 1
assert 'mv recipe' "$(prov echo b)" "$(echo 'b: \n\ttouch b')"
assert 'mv recipe remove' "$(prov echo a 2>&1)" "No recipe for a found in $DIR/Makefile"
touch subdir/a
prov set subdir/a <<< 'touch subdir/a'
prov mv subdir/a subdir/b
[[ -f subdir/b ]] || assert 'mv subdir file' 1
assert 'mv subdir recipe' "$(prov echo subdir/b)" "$(echo 'subdir/b: \n\ttouch subdir/b')"
assert 'mv subdir recipe remove' "$(prov echo subdir/a 2>&1)" "No recipe for subdir/a found in $DIR/Makefile"
cd subdir
prov mv ../b ../a
assert 'mv relpath' "$(prov echo ../a)" "$(echo 'a: \n\ttouch a')"
assert 'mv relpath recipe remove' "$(prov echo ../b 2>&1)" "No recipe for ../b found in $DIR/Makefile"
prov mv ../a .
[[ -f a ]] || assert 'mv to dir' 1
assert 'mv to dir recipe' "$(prov echo a)" "$(echo 'subdir/a: \n\ttouch subdir/a')"
assert 'mv to dir recipe remove' "$(prov echo ../a 2>&1)" "No recipe for ../a found in $DIR/Makefile"
prov mv a b ..
[[ -f ../a ]] || assert 'mv multiple' 1
[[ -f ../b ]] || assert 'mv multiple' 1
assert 'mv multiple recipe a' "$(prov echo ../a)" "$(echo 'a: \n\ttouch a')"
assert 'mv multiple recipe b' "$(prov echo ../b)" "$(echo 'b: \n\ttouch b')"
assert 'mv multiple recipe a remove' "$(prov echo a 2>&1)" "No recipe for a found in $DIR/Makefile"
assert 'mv multiple recipe b remove' "$(prov echo b 2>&1)" "No recipe for b found in $DIR/Makefile"
cd "$DIR"
prov mv a b subdir
prov mv subdir subdir2
assert 'mv dir recipe a' "$(prov echo subdir2/a)" "$(echo 'subdir2/a: \n\ttouch subdir2/a')"
assert 'mv dir recipe b' "$(prov echo subdir2/b)" "$(echo 'subdir2/b: \n\ttouch subdir2/b')"
assert 'mv dir recipe a remove' "$(prov echo a 2>&1)" "No recipe for a found in $DIR/Makefile"
assert 'mv dir recipe b remove' "$(prov echo b 2>&1)" "No recipe for b found in $DIR/Makefile"
mkdir subdir
prov mv subdir2 subdir
[[ -f subdir/subdir2/a ]] || assert 'mv nest dir raw mv' 1
assert 'mv nest dir recipe a' "$(prov echo subdir/subdir2/a)" "$(echo 'subdir/subdir2/a: \n\ttouch subdir/subdir2/a')"
teardown

#add
prov init
touch a
touch b
print -S 'cat a > b'
assert 'added msg' "$(prov add b)" "$(echo "Recipe added to $DIR/Makefile:\nb: a\n\tcat a > b")"
assert 'add' "$(prov echo b)" "$(echo 'b: a\n\tcat a > b')"
cd subdir
touch a
touch b
prov add b > /dev/null
assert 'add subdir' "$(prov echo b)" "$(echo 'subdir/b: subdir/a\n\tcat subdir/a > subdir/b')"
print -S 'echo "a" > a'
print -S 'echo "a" > ../a'
prov add ../a a > /dev/null
assert 'add multiple' "$(prov echo a)" "$(echo 'subdir/a: \n\techo "a" > subdir/a')"
assert 'add multiple 2' "$(prov echo ../a)" "$(echo 'a: \n\techo "a" > a')"
teardown

#comment
prov init
prov set a <<< 'touch a'
prov comment a test comment
assert 'comment' "$(prov comment a)" 'test comment'
prov comment a revised comment
assert 'revise comment' "$(prov comment a)" 'revised comment'
prov set a b <<< 'touch a'
assert 'blank comment' "$(prov comment a)" ''
prov comment a test comment
assert 'dependency comment' "$(prov comment a)" 'test comment'
prov comment a revised comment
assert 'dependency comment revision' "$(prov comment a)" 'revised comment'
cd subdir
prov comment ../a relative path comment
assert 'comment relative path' "$(prov comment ../a)" 'relative path comment'
teardown

#cp
prov init
touch a b
prov set a <<< 'touch a'
prov cp a c
assert 'cp file -> file' "$(prov echo c)" "$(echo 'c: \n\ttouch c')"
prov set b a <<< 'cat a > b'
prov cp a b subdir
assert 'cp' "$(prov echo subdir/a)" "$(echo 'subdir/a: \n\ttouch subdir/a')"
assert 'cp src preserved' "$(prov echo a)" "$(echo 'a: \n\ttouch a')"
assert 'cp dependencies' "$(prov echo subdir/b)" "$(echo 'subdir/b: subdir/a\n\tcat subdir/a > subdir/b')"
rm subdir/b
prov unset subdir/b
prov cp b subdir/b
assert 'cp file' "$(prov echo subdir/b)" "$(echo 'subdir/b: a\n\tcat a > subdir/b')"
mkdir subdir2
cd subdir
prov cp b ../subdir2
assert 'cp realpath dest' "$(prov echo ../subdir2/b)" "$(echo 'subdir2/b: a\n\tcat a > subdir2/b')"
cd "$DIR"
prov cp subdir2 subdir
assert 'cp nested dir' "$(prov echo subdir/subdir2/b)" "$(echo 'subdir/subdir2/b: a\n\tcat a > subdir/subdir2/b')"
prov rm subdir2
prov cp subdir/subdir2 subdir3
assert 'cp create dir' "$(prov echo subdir3/b)" "$(echo 'subdir3/b: a\n\tcat a > subdir3/b')"
teardown

#abstract
prov init
prov set a <<< 'echo a > a'
prov merge a
assert merge "$(prov echo a)" "$(echo 'a: \n\techo $(word 1,$(subst -, ,$(@F))) > $@')"
prov set a <<< 'echo a > a'
prov merge a b c
assert 'merge multi' "$(prov echo a)" "$(echo 'a b c: \n\techo $(word 1,$(subst -, ,$(@F))) > $@')"
assert 'merge multi b' "$(prov echo b)" "$(echo 'a b c: \n\techo $(word 1,$(subst -, ,$(@F))) > $@')"
assert 'merge multi c' "$(prov echo c)" "$(echo 'a b c: \n\techo $(word 1,$(subst -, ,$(@F))) > $@')"
prov merge b d e
assert 'merge multi d e' "$(prov echo d)" "$(echo 'a b c d e: \n\techo $(word 1,$(subst -, ,$(@F))) > $@')"
teardown

[[ -z "$ERR" ]] && echo "All Tests Pass"
exit "$ERR"
