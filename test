#!/bin/zsh

source $(dirname "$0")/deps >/dev/null

function assert() {
       if [[ "$2" != "$3" ]]; then
       	   echo "Failure: $1\n\tReceived: $2\n\tExpected: $3"
	   ERR=1
       fi
}

function teardown() {
    cd "$DIR"
    rm -rf Makefile a b subdir subdir2
    mkdir -p subdir
}

DIR=$(mktemp -d)
trap "rm -rf $DIR" EXIT
mkdir "$DIR/subdir"
cd "$DIR"

#init
deps init
[[ -f Makefile ]] || assert 'init creation' 1
deps init 2>/dev/null
assert 'init already exists' $? 1
teardown

#set
deps init
deps set a <<< 'touch a'
assert 'set initial' "$(deps echo a)" "$(echo 'a: \n\ttouch a')"
deps set a b <<< 'touch b'
assert 'set reset' "$(deps echo a)" "$(echo 'a: b\n\ttouch b')"
deps unset a
assert 'unset' "$(deps echo a 2>&1)" "No recipe for a found in $DIR/Makefile"
teardown
deps init
deps set subdir/a subdir/b <<< 'cat subdir/b > subdir/a'
assert 'echo' "$(deps echo subdir/a)" "$(echo 'subdir/a: subdir/b\n\tcat subdir/b > subdir/a')"
teardown

#rm
deps init
deps set a <<< 'touch a'
touch a
deps rm a
assert 'rm recipe removed' "$(deps echo a 2>&1)" "No recipe for a found in $DIR/Makefile"
[[ ! -f a ]] || assert 'rm file removed' 1
touch a
cd subdir
deps set a <<< 'touch a'
deps rm ../a
assert 'rm relpath' "$(deps echo a 2>&1)" "No recipe for a found in $DIR/Makefile"
cd "$DIR"
deps set a <<< 'touch a'
deps set b <<< 'touch b'
touch a b
deps rm a b
[[ ! -f a ]] || assert 'rm multi a' 1
[[ ! -f b ]] || assert 'rm multi b' 1
assert 'rm multi a recipe' "$(deps echo a 2>&1)" "No recipe for a found in $DIR/Makefile"
assert 'rm multi b recipe' "$(deps echo b 2>&1)" "No recipe for b found in $DIR/Makefile"
teardown

#mv
deps init
touch a
deps set a <<< 'touch a'
deps mv a b
[[ -f b ]] || assert 'mv file' 1
assert 'mv recipe' "$(deps echo b)" "$(echo 'b: \n\ttouch b')"
assert 'mv recipe remove' "$(deps echo a 2>&1)" "No recipe for a found in $DIR/Makefile"
touch subdir/a
deps set subdir/a <<< 'touch subdir/a'
deps mv subdir/a subdir/b
[[ -f subdir/b ]] || assert 'mv subdir file' 1
assert 'mv subdir recipe' "$(deps echo subdir/b)" "$(echo 'subdir/b: \n\ttouch subdir/b')"
assert 'mv subdir recipe remove' "$(deps echo subdir/a 2>&1)" "No recipe for subdir/a found in $DIR/Makefile"
cd subdir
deps mv ../b ../a
assert 'mv relpath' "$(deps echo ../a)" "$(echo 'a: \n\ttouch a')"
assert 'mv relpath recipe remove' "$(deps echo ../b 2>&1)" "No recipe for ../b found in $DIR/Makefile"
deps mv ../a .
[[ -f a ]] || assert 'mv to dir' 1
assert 'mv to dir recipe' "$(deps echo a)" "$(echo 'subdir/a: \n\ttouch subdir/a')"
assert 'mv to dir recipe remove' "$(deps echo ../a 2>&1)" "No recipe for ../a found in $DIR/Makefile"
deps mv a b ..
[[ -f ../a ]] || assert 'mv multiple' 1
[[ -f ../b ]] || assert 'mv multiple' 1
assert 'mv multiple recipe a' "$(deps echo ../a)" "$(echo 'a: \n\ttouch a')"
assert 'mv multiple recipe b' "$(deps echo ../b)" "$(echo 'b: \n\ttouch b')"
assert 'mv multiple recipe a remove' "$(deps echo a 2>&1)" "No recipe for a found in $DIR/Makefile"
assert 'mv multiple recipe b remove' "$(deps echo b 2>&1)" "No recipe for b found in $DIR/Makefile"
cd "$DIR"
deps mv a b subdir
deps mv subdir subdir2
assert 'mv dir recipe a' "$(deps echo subdir2/a)" "$(echo 'subdir2/a: \n\ttouch subdir2/a')"
assert 'mv dir recipe b' "$(deps echo subdir2/b)" "$(echo 'subdir2/b: \n\ttouch subdir2/b')"
assert 'mv dir recipe a remove' "$(deps echo a 2>&1)" "No recipe for a found in $DIR/Makefile"
assert 'mv dir recipe b remove' "$(deps echo b 2>&1)" "No recipe for b found in $DIR/Makefile"
mkdir subdir
deps mv subdir2 subdir
[[ -f subdir/subdir2/a ]] || assert 'mv nest dir raw mv' 1
assert 'mv nest dir recipe a' "$(deps echo subdir/subdir2/a)" "$(echo 'subdir/subdir2/a: \n\ttouch subdir/subdir2/a')"
teardown

#add
deps init
touch a
touch b
print -S 'cat a > b'
assert 'added msg' "$(deps add b)" "$(echo "Recipe added to $DIR/Makefile:\nb: a\n\tcat a > b")"
assert 'add' "$(deps echo b)" "$(echo 'b: a\n\tcat a > b')"
cd subdir
touch a
touch b
deps add b > /dev/null
assert 'add subdir' "$(deps echo b)" "$(echo 'subdir/b: subdir/a\n\tcat subdir/a > subdir/b')"
print -S 'echo "a" > a'
print -S 'echo "a" > ../a'
deps add ../a a > /dev/null
assert 'add multiple' "$(deps echo a)" "$(echo 'subdir/a: \n\techo "a" > subdir/a')"
assert 'add multiple 2' "$(deps echo ../a)" "$(echo 'a: \n\techo "a" > a')"
teardown

#comment
deps init
deps set a <<< 'touch a'
deps comment a test comment
assert 'comment' "$(deps comment a)" 'test comment'
deps comment a revised comment
assert 'revise comment' "$(deps comment a)" 'revised comment'
deps set a b <<< 'touch a'
assert 'blank comment' "$(deps comment a)" ''
deps comment a test comment
assert 'dependency comment' "$(deps comment a)" 'test comment'
deps comment a revised comment
assert 'dependency comment revision' "$(deps comment a)" 'revised comment'
cd subdir
deps comment ../a relative path comment
assert 'comment relative path' "$(deps comment ../a)" 'relative path comment'
teardown

#cp
deps init
touch a b
deps set a <<< 'touch a'
deps cp a c
assert 'cp file -> file' "$(deps echo c)" "$(echo 'c: \n\ttouch c')"
deps set b a <<< 'cat a > b'
deps cp a b subdir
assert 'cp' "$(deps echo subdir/a)" "$(echo 'subdir/a: \n\ttouch subdir/a')"
assert 'cp src preserved' "$(deps echo a)" "$(echo 'a: \n\ttouch a')"
assert 'cp dependencies' "$(deps echo subdir/b)" "$(echo 'subdir/b: subdir/a\n\tcat subdir/a > subdir/b')"
rm subdir/b
deps unset subdir/b
deps cp b subdir/b
assert 'cp file' "$(deps echo subdir/b)" "$(echo 'subdir/b: a\n\tcat a > subdir/b')"
mkdir subdir2
cd subdir
deps cp b ../subdir2
assert 'cp realpath dest' "$(deps echo ../subdir2/b)" "$(echo 'subdir2/b: a\n\tcat a > subdir2/b')"
cd "$DIR"
deps cp subdir2 subdir
assert 'cp nested dir' "$(deps echo subdir/subdir2/b)" "$(echo 'subdir/subdir2/b: a\n\tcat a > subdir/subdir2/b')"
#cat Makefile >&2
teardown

[[ -z "$ERR" ]] && echo "All Tests Pass"
exit "$ERR"
